<?php
module_load_include( 'inc', 'scoga', 'scoga.constants' );
module_load_include( 'inc', 'scoga' );

define( 'SCOGA_PERM_ADMINISTER_SETTINGS', 'scoga administer settings' );

/**
 * implement hook_menu()
 */
function scoga_menu(){
    $items = array();
    $items[ 'admin/config/scoga' ] = array(
        'title' => t('SCOGA settings'),
        'description' => t('General settings for SCOGA'),
        'page callback' => 'system_admin_menu_block_page',
        'access arguments' => array( SCOGA_PERM_ADMINISTER_SETTINGS ),
        'file' => 'system.admin.inc',
        'file path' => drupal_get_path('module', 'system'),
        'type' => MENU_NORMAL_ITEM,
    );
    $items[ 'admin/config/scoga/scoring' ] = array(
        'title' => t( 'SCOGA scoring settings' ),
        'description' => t( 'Scoring settings for SCOGA' ),
        'page callback' => 'drupal_get_form',
        'page arguments' => array( 'scoga_scoring_form' ),
        'access arguments' => array( SCOGA_PERM_ADMINISTER_SETTINGS ),
        'type' => MENU_NORMAL_ITEM,
    );
    return $items;
}

function scoga_scoring_form( $form, &$form_state ){

    $terms = taxonomy_get_tree( SCOGA_PLAYERACTIONTYPE_VID, 0, NULL, TRUE );
    foreach( $terms as $index => $term ){
        $form_elem_name = 'scoga_settings_' . $term->name . '_score';
        $form[ $form_elem_name ] = array(
            '#type' => 'textfield',
            '#title' => t('Scoring for "' ) . $term->name .'"',
            '#description' => t('Defines the base score value of player action "' ) . $term->name . '"',
            '#default_value' => variable_get( $form_elem_name, 1 ),
            '#size' => 10,
            '#required' => TRUE
        );
    }
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Save settings'),
    );

    return $form;
}

function scoga_scoring_form_submit( $form, &$form_state ){
    $terms = taxonomy_get_tree( SCOGA_PLAYERACTIONTYPE_VID, 0, NULL, TRUE );
    foreach( $terms as $index => $term ){
        $form_elem_name = 'scoga_settings_' . $term->name . '_score';
        variable_set( $form_elem_name, $form_state['values'][$form_elem_name] );
    }
    drupal_set_message( t('The scoring settings have been saved.') );
}

/**
 * implements hook_node_presave
 * @param $node
 */

function scoga_node_presave( $node ){

    if( $node->status == '1' && property_exists( $node, 'field_term_playeraction' ) ){
        scoga_save_scores_for_player_action( $node );
    }
}
